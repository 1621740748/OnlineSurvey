{"remainingRequest":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/Recycle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/Recycle.vue","mtime":1605753490114},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Recycle.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"recycle\" ref=\"recycle\">\r\n    <!-- 下载 -->\r\n    <div style=\"float:right;margin:20px 0 0 5px;\">\r\n    <el-button type=\"primary\" size=\"small\" @click=\"saveAsImage('dataReport', '统计报表')\" style=\"display:block;margin:5px auto;\">\r\n      <i\r\n        class=\"el-icon-download\"\r\n        style=\"display:block;font-size:16px;font-weight:bold;margin-bottom:5px\"\r\n      ></i>下载\r\n    </el-button>\r\n    <!-- <el-button type=\"primary\" size=\"small\" @click=\"$print($refs.dataReport)\" style=\"display:block;margin:5px auto;\">\r\n      <i\r\n        class=\"el-icon-printer\"\r\n        style=\"display:block;font-size:16px;font-weight:bold;margin-bottom:5px\"\r\n      ></i>打印\r\n    </el-button> -->\r\n    </div>\r\n      <el-card>\r\n    <div class=\"dataReport\" ref=\"dataReport\" style=\"padding:0 32px;\">\r\n      <i class=\"el-icon-data-line\"></i>\r\n          <h4>数据分析</h4>\r\n        <div v-if=\"questions.length == 0\">暂无数据</div>\r\n        <div\r\n          v-for=\"(item, index) in questions\"\r\n          :key=\"index\"\r\n          style=\"margin-bottom:30px;padding-bottom:30px;border-bottom: 1px dashed #d6d6d6;\"\r\n        >\r\n          第{{index+1}}题：{{item.title}}\r\n          <span class=\"must\" v-if=\"item.isRequired == 1\">*</span>\r\n          <span style=\"color:#999;margin-left:10px;\">{{item.type | typeFilter(types)}}</span>\r\n          <!-- 选择题/评分题显示表格 -->\r\n          <div v-if=\"item.type=='radio' || item.type=='checkbox' || item.type=='rate'\">\r\n            <el-table :data=\"item.options\" border stripe style=\"margin:10px 0px;\">\r\n              <el-table-column\r\n                v-if=\"item.type=='radio' || item.type=='checkbox'\"\r\n                prop=\"value\"\r\n                label=\"选项\"\r\n                align=\"center\"\r\n                sortable\r\n              ></el-table-column>\r\n              <el-table-column\r\n                v-if=\"item.type=='rate'\"\r\n                prop=\"value\"\r\n                label=\"评级\"\r\n                sortable\r\n                align=\"center\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  {{scope.row.value}}星\r\n                  <i\r\n                    v-for=\"indx of Number(scope.row.value)\"\r\n                    :key=\"'on'+indx\"\r\n                    class=\"el-icon-star-on\"\r\n                    style=\"color:#f7ba2a;\"\r\n                  ></i>\r\n                  <i\r\n                    v-for=\"indx of (5-Number(scope.row.value))\"\r\n                    :key=\"'off'+indx\"\r\n                    class=\"el-icon-star-off\"\r\n                    style=\"color:#c6d1de\"\r\n                  ></i>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"number\" label=\"小计\" align=\"center\" sortable></el-table-column>\r\n              <el-table-column prop label=\"比例\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-progress v-if=\"sums[index]==0\" :percentage=\"0\"></el-progress>\r\n                  <el-progress\r\n                    v-if=\"!sums[index]==0\"\r\n                    :percentage=\"Number((scope.row.number / sums[index] * 100).toFixed(2))\"\r\n                  ></el-progress>\r\n                </template>\r\n              </el-table-column>\r\n              <template slot=\"append\">\r\n                <el-alert type=\"info\" :closable=\"false\" center>\r\n                  <strong slot=\"title\">本题有效填写人次：{{item.valid}}</strong>\r\n                </el-alert>\r\n              </template>\r\n            </el-table>\r\n            <!-- 评分题显示平均评分 -->\r\n            <div v-if=\"item.type=='rate'\" style=\"margin:10px 0px;\">\r\n              <el-tag>平均评分</el-tag>\r\n              <el-rate\r\n                v-model=\"rateAvgs[index]\"\r\n                disabled\r\n                show-score\r\n                text-color=\"#ff9900\"\r\n                style=\"display:inline-block;margin-left:5px;\"\r\n              ></el-rate>\r\n            </div>\r\n            <!-- 显示统计图表 -->\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"initColumnchart(item, index)\">柱形图</el-button>\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"initPiechart(item, index)\">饼状图</el-button>\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"initRingchart(item, index)\">环形图</el-button>\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"initBarchart(item, index)\">条形图</el-button>\r\n            <div v-show=\"charts[index] == 1\" class=\"charts\" :ref=\"'column'+index\"></div>\r\n            <div v-show=\"charts[index] == 2\" class=\"charts\" :ref=\"'pie'+index\"></div>\r\n            <div v-show=\"charts[index] == 3\" class=\"charts\" :ref=\"'ring'+index\"></div>\r\n            <div v-show=\"charts[index] == 4\" class=\"charts\" :ref=\"'bar'+index\"></div>\r\n          </div>\r\n          <!-- 文本题显示按钮 -->\r\n          <el-button\r\n            v-if=\"item.type=='textarea'\"\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            style=\"display:block;margin:10px 0px;\"\r\n            @click=\"lookTextDetail(`第${index+1}题：${item.title}`, item.id)\"\r\n          >查看详细信息</el-button>\r\n        </div>\r\n    </div>\r\n      </el-card>\r\n    <el-dialog\r\n      :title=\"textTitle\"\r\n      :visible.sync=\"dialogTableVisible\"\r\n      :append-to-body=\"true\"\r\n      width=\"60%\"\r\n    >\r\n      <el-table :data=\"textareaData\">\r\n        <el-table-column type=\"index\" label=\"序号\" width=\"75\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{scope.$index+(pageinfo.currentPage - 1) * pageinfo.pageSize + 1}}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column property=\"submitDate\" label=\"提交答卷时间\" width=\"200\" align=\"center\"></el-table-column>\r\n        <el-table-column property=\"content\" label=\"答案文本\"></el-table-column>\r\n        <el-table-column label=\"查看答卷\" width=\"100\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              type=\"text\"\r\n              @click=\"openRecycleSurvey(scope.$index+(pageinfo.currentPage - 1) * pageinfo.pageSize + 1, scope.row.recycleId)\"\r\n            >查看答卷</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        background\r\n        layout=\"prev, pager, next,sizes,total\"\r\n        :page-sizes=\"[5, 10, 15, 20]\"\r\n        :page-size=\"pageinfo.pageSize\"\r\n        :current-page=\"pageinfo.currentPage\"\r\n        :total=\"pageinfo.total\"\r\n        style=\"margin-top: 10px;\"\r\n        @current-change=\"textCurrentChange\"\r\n        @size-change=\"textSizeChange\"\r\n      ></el-pagination>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport QS from \"qs\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      sums: [],\r\n      surveyId: \"\",\r\n      questions: {},\r\n      rateAvgs: [],\r\n      types: [\r\n        { value: \"radio\", text: \"[单选题]\" },\r\n        { value: \"checkbox\", text: \"[多选题]\" },\r\n        { value: \"textarea\", text: \"[文本题]\" },\r\n        { value: \"rate\", text: \"[评分题]\" }\r\n      ],\r\n      textareaData: [],\r\n      currentTextId: \"\",\r\n      textTitle: \"\",\r\n      dialogTableVisible: false,\r\n      pageinfo: {\r\n        //每页数量\r\n        pageSize: 5,\r\n        //当前页\r\n        currentPage: 1,\r\n        //总数量\r\n        total: 0\r\n      },\r\n      // charts\r\n      charts: []\r\n    };\r\n  },\r\n\r\n  filters: {\r\n    typeFilter(value, types) {\r\n      for (let i = 0; i < types.length; i++) {\r\n        if (value == types[i].value) {\r\n          return types[i].text;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // 向服务器请求问卷信息\r\n    getQuestions() {\r\n      this.$http.post(\"recycle/detail/\" + this.surveyId).then(res => {\r\n        this.questions = res.data;\r\n        // 设置统计报表的初始显示状态\r\n        for (const key in this.questions) {\r\n          this.$set(this.charts, key, 0);\r\n        }\r\n        // 算出总数用作百分数计算的分母\r\n        for (const key in this.questions) {\r\n          let sum = 0;\r\n          const options = this.questions[key].options;\r\n          if (options != null) {\r\n            options.forEach(item => {\r\n              sum += item.number;\r\n            });\r\n          }\r\n          this.sums.push(sum);\r\n        }\r\n        // 算出平均评分\r\n        for (const key in this.questions) {\r\n          let avg = 0;\r\n          const options = this.questions[key].options;\r\n          if (options != null && this.questions[key].type == \"rate\") {\r\n            options.forEach(item => {\r\n              avg +=\r\n                (Number(item.value) * Number(item.number)) / this.sums[key];\r\n            });\r\n          }\r\n          this.rateAvgs.push(Number(avg.toFixed(1)));\r\n        }\r\n      });\r\n    },\r\n\r\n    lookTextDetail(title, id) {\r\n      this.dialogTableVisible = true;\r\n      this.currentTextId = id;\r\n      this.textTitle = title;\r\n      this.pageinfo.pageSize = 5;\r\n      this.pageinfo.currentPage = 1;\r\n      this.textPageQuery(id);\r\n    },\r\n\r\n    textPageQuery(id) {\r\n      const data = {};\r\n      data.questionId = id;\r\n      data.page = this.pageinfo.currentPage;\r\n      data.size = this.pageinfo.pageSize;\r\n      this.$http\r\n        .post(\"recycle/detail/textarea\", QS.stringify(data))\r\n        .then(res => {\r\n          this.textareaData = res.data.list;\r\n          this.pageinfo.total = res.data.count;\r\n        });\r\n    },\r\n\r\n    //根据页码查询数据\r\n    textCurrentChange(page) {\r\n      this.pageinfo.currentPage = page;\r\n      this.textPageQuery(this.currentTextId);\r\n    },\r\n\r\n    textSizeChange(pageSize) {\r\n      this.pageinfo.pageSize = pageSize;\r\n      this.pageinfo.currentPage = 1;\r\n      this.textPageQuery(this.currentTextId);\r\n    },\r\n\r\n    // 打开新标签页查看答卷\r\n    openRecycleSurvey(id, recycleId) {\r\n      window.open(\r\n        `#/view/recycle?id=${id}&recycleId=${recycleId}&surveyId=${this.surveyId}`\r\n      );\r\n    },\r\n    /**\r\n     * 柱形图\r\n     */\r\n    initColumnchart(item, index) {\r\n      this.charts[index] != 1\r\n        ? this.$set(this.charts, index, 1)\r\n        : this.$set(this.charts, index, 0);\r\n      if (this.charts[index] === 1) {\r\n        const xdata = [];\r\n        for (const key in item.options) {\r\n          xdata.push(item.options[key].value);\r\n        }\r\n        const ydata = [];\r\n        for (const key in item.options) {\r\n          ydata.push(item.options[key].number);\r\n        }\r\n        this.$nextTick(() => {\r\n          var myChart = this.$echarts.init(\r\n            this.$refs[\"column\" + index][0],\r\n            \"macarons\"\r\n          );\r\n          let option = {\r\n            xAxis: {\r\n              type: \"category\",\r\n              data: xdata\r\n            },\r\n            yAxis: {\r\n              type: \"value\"\r\n            },\r\n            tooltip: {},\r\n            series: [\r\n              {\r\n                data: ydata,\r\n                barWidth: \"30%\",\r\n                type: \"bar\",\r\n                label: {\r\n                  show: true,\r\n                  position: \"top\"\r\n                }\r\n              }\r\n            ],\r\n            toolbox: {\r\n              feature: {\r\n                saveAsImage: {} // 保存为图片\r\n              }\r\n            }\r\n          };\r\n          // 绘制图表\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * 饼状图\r\n     */\r\n    initPiechart(item, index) {\r\n      this.charts[index] != 2\r\n        ? this.$set(this.charts, index, 2)\r\n        : this.$set(this.charts, index, 0);\r\n\r\n      const value = [];\r\n      for (const key in item.options) {\r\n        value.push(item.options[key].value);\r\n      }\r\n      const data = [];\r\n      for (const key in item.options) {\r\n        const temp = {};\r\n        temp.name = item.options[key].value;\r\n        temp.value = item.options[key].number;\r\n        data.push(temp);\r\n      }\r\n      if (this.charts[index] === 2) {\r\n        this.$nextTick(() => {\r\n          var myChart = this.$echarts.init(\r\n            this.$refs[\"pie\" + index][0],\r\n            \"macarons\"\r\n          );\r\n          var option = {\r\n            tooltip: {\r\n              trigger: \"item\",\r\n              formatter: \"{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n              orient: \"horizontal\",\r\n              center: \"center\",\r\n              data: value\r\n            },\r\n            series: [\r\n              {\r\n                type: \"pie\",\r\n                radius: \"55%\",\r\n                center: [\"50%\", \"50%\"],\r\n                data: data,\r\n                itemStyle: {\r\n                  emphasis: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n                  }\r\n                }\r\n              }\r\n            ],\r\n            toolbox: {\r\n              feature: {\r\n                saveAsImage: {} // 保存为图片\r\n              }\r\n            }\r\n          };\r\n          // 绘制图表\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * 环形图\r\n     */\r\n    initRingchart(item, index) {\r\n      this.charts[index] != 3\r\n        ? this.$set(this.charts, index, 3)\r\n        : this.$set(this.charts, index, 0);\r\n\r\n      const value = [];\r\n      for (const key in item.options) {\r\n        value.push(item.options[key].value);\r\n      }\r\n      const data = [];\r\n      for (const key in item.options) {\r\n        const temp = {};\r\n        temp.name = item.options[key].value;\r\n        temp.value = item.options[key].number;\r\n        data.push(temp);\r\n      }\r\n      if (this.charts[index] === 3) {\r\n        this.$nextTick(() => {\r\n          var myChart = this.$echarts.init(\r\n            this.$refs[\"ring\" + index][0],\r\n            \"macarons\"\r\n          );\r\n          var option = {\r\n            tooltip: {\r\n              trigger: \"item\",\r\n              formatter: \"{b}: {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n              orient: \"vertical\",\r\n              left: 10,\r\n              data: value\r\n            },\r\n            series: [\r\n              {\r\n                type: \"pie\",\r\n                radius: [\"50%\", \"70%\"],\r\n                avoidLabelOverlap: false,\r\n                label: {\r\n                  normal: {\r\n                    show: false,\r\n                    position: \"center\"\r\n                  },\r\n                  emphasis: {\r\n                    show: true,\r\n                    textStyle: {\r\n                      fontSize: \"30\",\r\n                      fontWeight: \"bold\"\r\n                    }\r\n                  }\r\n                },\r\n                labelLine: {\r\n                  normal: {\r\n                    show: false\r\n                  }\r\n                },\r\n                data: data\r\n              }\r\n            ],\r\n            toolbox: {\r\n              feature: {\r\n                saveAsImage: {} // 保存为图片\r\n              }\r\n            }\r\n          };\r\n          // 绘制图表\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * 条形图\r\n     */\r\n    initBarchart(item, index) {\r\n      this.charts[index] != 4\r\n        ? this.$set(this.charts, index, 4)\r\n        : this.$set(this.charts, index, 0);\r\n      if (this.charts[index] === 4) {\r\n        const xdata = [];\r\n        for (const key in item.options) {\r\n          xdata.push(item.options[key].number);\r\n        }\r\n        const ydata = [];\r\n        for (const key in item.options) {\r\n          ydata.push(item.options[key].value);\r\n        }\r\n        this.$nextTick(() => {\r\n          var myChart = this.$echarts.init(\r\n            this.$refs[\"bar\" + index][0],\r\n            \"macarons\"\r\n          );\r\n          let option = {\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              axisPointer: {\r\n                type: \"shadow\"\r\n              }\r\n            },\r\n            grid: {\r\n              left: \"3%\",\r\n              right: \"4%\",\r\n              bottom: \"3%\",\r\n              containLabel: true\r\n            },\r\n            xAxis: {\r\n              type: \"value\",\r\n              boundaryGap: [0, 0.01]\r\n            },\r\n            yAxis: {\r\n              type: \"category\",\r\n              data: ydata\r\n            },\r\n            series: [\r\n              {\r\n                type: \"bar\",\r\n                barWidth: \"50%\",\r\n                data: xdata\r\n              }\r\n            ],\r\n            toolbox: {\r\n              feature: {\r\n                saveAsImage: {} // 保存为图片\r\n              }\r\n            }\r\n          };\r\n          // 绘制图表\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n    },\r\n    dataURLToBlob(dataurl) {\r\n      let arr = dataurl.split(\",\");\r\n      let mime = arr[0].match(/:(.*?);/)[1];\r\n      let bstr = atob(arr[1]);\r\n      let n = bstr.length;\r\n      let u8arr = new Uint8Array(n);\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n      return new Blob([u8arr], { type: mime });\r\n    },\r\n    /**\r\n     * 保存为图片\r\n     */\r\n    saveAsImage(divText, imgText) {\r\n      let canvasID = this.$refs[divText];\r\n      let that = this;\r\n      let a = document.createElement(\"a\");\r\n      html2canvas(canvasID).then(canvas => {\r\n        let dom = document.body.appendChild(canvas);\r\n        dom.style.display = \"none\";\r\n        a.style.display = \"none\";\r\n        document.body.removeChild(dom);\r\n        let blob = that.dataURLToBlob(dom.toDataURL(\"image/jpg\"));\r\n        a.setAttribute(\"href\", URL.createObjectURL(blob));\r\n        //这块是保存图片操作  可以设置保存的图片的信息\r\n        a.setAttribute(\"download\", imgText + \".jpg\");\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        URL.revokeObjectURL(blob);\r\n        document.body.removeChild(a);\r\n      });\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.surveyId = this.$route.query.surveyId;\r\n    this.getQuestions();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.recycle .el-progress__text {\r\n  display: block;\r\n}\r\n.recycle table thead {\r\n  background-color: #f5f7fa;\r\n}\r\n</style>\r\n<style scoped>\r\n.recycle {\r\n  margin: 20px 0;\r\n  width: 861px;\r\n  margin-left: 100px;\r\n}\r\n.must {\r\n  color: #ff6161;\r\n}\r\n.charts {\r\n  height: 280px;\r\n  padding-top: 20px;\r\n  width: 100%;\r\n  border: 1px solid #d6d6d6;\r\n  border-radius: 10px;\r\n  margin-top: 10px;\r\n}\r\nh4 {\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n}\r\n.explain {\r\n  color: #4f4f4f;\r\n  font-size: 14px;\r\n}\r\n</style>"],"sourceRoot":"src/views/home/design/chart"}]}