{"remainingRequest":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/thread-loader/dist/cjs.js!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/OnlineSurvey/FrontEnd/surveyui/src/views/admin/survey/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/OnlineSurvey/FrontEnd/surveyui/src/views/admin/survey/index.vue","mtime":1605753490110},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"survey\">\r\n    <my-table\r\n      :data=\"tableData\"\r\n      @page=\"surveyPageQuery\"\r\n      @check=\"handleCheck\"\r\n      @delete=\"handleDelete\"\r\n      @visibility=\"handleVisibility\"\r\n      @mulitOpen=\"handleMulitOpen\"\r\n      @mulitBan=\"handleMulitBan\"\r\n      @mulitDel=\"handleMulitDel\"\r\n    ></my-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MyTable from \"../components/Table.vue\";\r\nimport { SurveyCols } from \"../components/SurveyCols\";\r\nimport { Toolbar } from \"../components/Toolbar\";\r\nimport { PageInfo } from \"../components/PageInfo\";\r\nimport QS from \"qs\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      tableData: {\r\n        cols: SurveyCols,\r\n        rowData: [],\r\n        pageinfo: PageInfo,\r\n        toolbar: Toolbar,\r\n        searchFilterConfig: {\r\n          isSearch: true,\r\n          placeholder: \"搜索ID、问卷标题、简介\",\r\n          filters: [\"id\", \"title\", \"introduction\"]\r\n        },\r\n        isOperation: true,\r\n        operation: {\r\n          label: \"操作选项\",\r\n          width: \"185\",\r\n          data: [\r\n            { label: \"查看\", type: \"primary\", emit: \"check\" },\r\n            { label: \"删除\", type: \"danger\", emit: \"delete\" }\r\n          ]\r\n        }\r\n      }\r\n    };\r\n  },\r\n\r\n  components: { MyTable },\r\n\r\n  methods: {\r\n    /**\r\n     * 处理单个问卷状态\r\n     */\r\n    handleVisibility(data) {\r\n      data.row.visibility === 1\r\n        ? (data.row.visibility = 0)\r\n        : (data.row.visibility = 1);\r\n      let message =\r\n        data.row.visibility === 1\r\n          ? `确定要将 <strong>问卷ID前6位: ${data.row.id.substring(\r\n              0,\r\n              6\r\n            )}, <br>问卷标题: ${\r\n              data.row.title\r\n            }</strong> 的问卷<strong style=\"color:#ff6161\">封禁</strong>吗？`\r\n          : `确定要将 <strong>问卷ID前6位: ${data.row.id.substring(\r\n              0,\r\n              6\r\n            )}, <br>问卷标题: ${\r\n              data.row.title\r\n            }</strong> 的问卷<strong style=\"color:#ff6161\">恢复正常</strong>吗？`;\r\n      this.$confirm(message, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n        dangerouslyUseHTMLString: true\r\n      }).then(() => {\r\n        const survey = {};\r\n        survey.id = data.row.id;\r\n        survey.visibility = data.row.visibility === 1 ? 0 : 1;\r\n        this.$http\r\n          .post(\"survey/visibility\", [survey])\r\n          .then(() => {\r\n            data.row.visibility === 1\r\n              ? (data.row.visibility = 0)\r\n              : (data.row.visibility = 1);\r\n            this.$message({\r\n              message: `问卷ID: ${data.row.id} 已处理`,\r\n              type: \"success\"\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.$message({\r\n              message: \"操作失败\",\r\n              type: \"error\"\r\n            });\r\n          });\r\n      });\r\n    },\r\n    /**\r\n     * 批量开启问卷\r\n     */\r\n    handleMulitOpen(rows) {\r\n      this.$confirm(\r\n        `确定要将这 <strong style=\"color:#ff6161\">${rows.length} 份问卷</strong> 恢复正常状态吗？`,\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n          dangerouslyUseHTMLString: true\r\n        }\r\n      ).then(() => {\r\n        rows.forEach(row => {\r\n          row.visibility = 1;\r\n        });\r\n        this.$http\r\n          .post(\"survey/visibility\", rows)\r\n          .then(() => {\r\n            this.$message({\r\n              message: `已将这 ${rows.length}份问卷 恢复正常状态`,\r\n              type: \"success\"\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.$message({\r\n              message: \"操作失败\",\r\n              type: \"error\"\r\n            });\r\n          });\r\n      });\r\n    },\r\n    /**\r\n     * 批量封禁问卷\r\n     */\r\n    handleMulitBan(rows) {\r\n      this.$confirm(\r\n        `确定要将这 <strong style=\"color:#ff6161\">${rows.length}个问卷</strong> 封禁吗？`,\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n          dangerouslyUseHTMLString: true\r\n        }\r\n      ).then(() => {\r\n        rows.forEach(row => {\r\n          row.visibility = 0;\r\n        });\r\n        this.$http\r\n          .post(\"survey/visibility\", rows)\r\n          .then(() => {\r\n            this.$message({\r\n              message: `已将这 ${rows.length}份问卷 封禁`,\r\n              type: \"success\"\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.$message({\r\n              message: \"操作失败\",\r\n              type: \"error\"\r\n            });\r\n          });\r\n      });\r\n    },\r\n    /**\r\n     * 删除单份问卷\r\n     */\r\n    handleDelete(data) {\r\n      this.$confirm(\r\n        `确定要将 <strong>问卷ID前6位: ${data.row.id.substring(\r\n          0,\r\n          6\r\n        )}, <br>问卷标题: ${\r\n          data.row.title\r\n        }</strong> 的问卷<strong style=\"color:#ff6161\">删除</strong>吗？`,\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n          dangerouslyUseHTMLString: true\r\n        }\r\n      ).then(() => {\r\n        const survey = {};\r\n        survey.id = data.row.id;\r\n        this.$http\r\n          .post(\"survey/mulit_delete\", [survey])\r\n          .then(() => {\r\n            this.$message({\r\n              message: `已将问卷ID: ${data.row.id} 的问卷删除`,\r\n              type: \"success\"\r\n            });\r\n            this.surveyPageQuery();\r\n          })\r\n          .catch(() => {\r\n            this.$message({\r\n              message: \"操作失败\",\r\n              type: \"error\"\r\n            });\r\n          });\r\n      });\r\n    },\r\n    /**\r\n     * 批量删除问卷\r\n     */\r\n    handleMulitDel(rows) {\r\n      this.$confirm(\r\n        `确定要将这 <strong style=\"color:#ff6161\">${rows.length}份问卷</strong> 永久删除吗？`,\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n          dangerouslyUseHTMLString: true\r\n        }\r\n      ).then(() => {\r\n        this.$http\r\n          .post(\"survey/mulit_delete\", rows)\r\n          .then(() => {\r\n            this.$message({\r\n              message: `已将这 ${rows.length}份问卷 删除`,\r\n              type: \"success\"\r\n            });\r\n            this.surveyPageQuery();\r\n          })\r\n          .catch(() => {\r\n            this.$message({\r\n              message: \"操作失败\",\r\n              type: \"error\"\r\n            });\r\n          });\r\n      });\r\n    },\r\n    /**\r\n     * 新标签页打开问卷\r\n     */\r\n    handleCheck(data) {\r\n      window.open(`${this.$http.domain}/#/answer/pc/?surveyId=${data.row.id}`);\r\n    },\r\n    /**\r\n     * 获取表格数据\r\n     */\r\n    surveyPageQuery() {\r\n      const page = {};\r\n      page.page = this.tableData.pageinfo.currentPage;\r\n      page.size = this.tableData.pageinfo.pageSize;\r\n      this.$http.post(\"survey/manage/list\", QS.stringify(page)).then(res => {\r\n        this.tableData.pageinfo.total = res.data.count;\r\n        this.tableData.rowData = res.data.surveyList;\r\n      });\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.surveyPageQuery();\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/admin/survey"}]}