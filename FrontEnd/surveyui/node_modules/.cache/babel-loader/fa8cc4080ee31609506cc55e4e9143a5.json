{"remainingRequest":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/thread-loader/dist/cjs.js!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/components/DataSource.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/components/DataSource.vue","mtime":1605753490114},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YVNvdXJjZTogW10sCiAgICAgIG1hcERhdGE6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdE1hcENoYXJ0czogZnVuY3Rpb24gaW5pdE1hcENoYXJ0cygpIHsKICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iwogICAgICB2YXIgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLm1hcCwgIm1hY2Fyb25zIik7CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICLlnLDln5/kvY3nva4iLAogICAgICAgICAgeDogImxlZnQiCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiBmb3JtYXR0ZXIocGFyYW1zKSB7CiAgICAgICAgICAgIGlmIChwYXJhbXMudmFsdWUpIHsKICAgICAgICAgICAgICByZXR1cm4gcGFyYW1zLm5hbWUgKyAi77yaIiArIHBhcmFtcy52YWx1ZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICByZXR1cm4gcGFyYW1zLm5hbWUgKyAi77yaIiArICIwIjsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdmlzdWFsTWFwOiB7CiAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgIGluUmFuZ2U6IHsKICAgICAgICAgICAgY29sb3I6IFsiI0M2RTJGRiIsICIjNDA5RUZGIl0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdlbzogewogICAgICAgICAgcm9hbTogZmFsc2UsCiAgICAgICAgICAvL+emgeatoue8qeaUvgogICAgICAgICAgbWFwOiAiY2hpbmEiLAogICAgICAgICAgbGVmdDogImxlZnQiLAogICAgICAgICAgcmlnaHQ6ICIwIiwKICAgICAgICAgIGxheW91dFNpemU6ICI1MCIsCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICBhcmVhQ29sb3I6ICIjNDA5RUZGIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgcmVnaW9uczogW3sKICAgICAgICAgICAgbmFtZTogIuWNl+a1t+ivuOWymyIsCiAgICAgICAgICAgIHZhbHVlOiAwLAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsCiAgICAgICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfV0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICLlnLDln5/kvY3nva4iLAogICAgICAgICAgdHlwZTogIm1hcCIsCiAgICAgICAgICByb2FtOiBmYWxzZSwKICAgICAgICAgIGdlb0luZGV4OiAwLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiB0aGlzLm1hcERhdGEKICAgICAgICB9XQogICAgICB9OyAvLyDnu5jliLblm77ooagKCiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICB9LAogICAgaW5pdFNvdXJjZUNoYXJ0czogZnVuY3Rpb24gaW5pdFNvdXJjZUNoYXJ0cygpIHsKICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iwogICAgICB2YXIgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLnNvdXJjZUNoYXJ0cywgIm1hY2Fyb25zIik7CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICLmuKDpgZPmnaXmupAiLAogICAgICAgICAgeDogImxlZnQiCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAiaXRlbSIsCiAgICAgICAgICBmb3JtYXR0ZXI6ICJ7YX0gPGJyLz57Yn0gOiB7Y30gKHtkfSUpIgogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBvcmllbnQ6ICJ2ZXJ0aWNhbCIsCiAgICAgICAgICBsZWZ0OiAicmlnaHQiLAogICAgICAgICAgZGF0YTogWyLkuoznu7TnoIEiLCAi5b6u5L+hIiwgIumTvuaOpSJdCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAi5rig6YGT5p2l5rqQIiwKICAgICAgICAgIHR5cGU6ICJwaWUiLAogICAgICAgICAgcmFkaXVzOiAiNTUlIiwKICAgICAgICAgIGNlbnRlcjogWyI1MCUiLCAiNjAlIl0sCiAgICAgICAgICBkYXRhOiB0aGlzLmRhdGFTb3VyY2UsCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAxMCwKICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRYOiAwLAogICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAicmdiYSgwLCAwLCAwLCAwLjUpIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfTsgLy8g57uY5Yi25Zu+6KGoCgogICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgfSwKICAgIGdldERhdGFTb3VyY2U6IGZ1bmN0aW9uIGdldERhdGFTb3VyY2UoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldCgiL3JlY3ljbGUvZGF0YV9zb3VyY2UvIi5jb25jYXQodGhpcy4kcm91dGUucXVlcnkuc3VydmV5SWQpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy5kYXRhU291cmNlID0gcmVzLmRhdGE7CgogICAgICAgIF90aGlzLmluaXRTb3VyY2VDaGFydHMoKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0TWFwRGF0YTogZnVuY3Rpb24gZ2V0TWFwRGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldCgiL3JlY3ljbGUvbWFwLyIuY29uY2F0KHRoaXMuJHJvdXRlLnF1ZXJ5LnN1cnZleUlkKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMyLm1hcERhdGEgPSByZXMuZGF0YTsKCiAgICAgICAgX3RoaXMyLmluaXRNYXBDaGFydHMoKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXREYXRhU291cmNlKCk7CiAgICB0aGlzLmdldE1hcERhdGEoKTsKICB9Cn07"},{"version":3,"sources":["DataSource.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div style=\"margin-top: 20px;\">\r\n    <el-row :gutter=\"10\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div style=\"height: 300px;width: 100%;\" ref=\"map\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div style=\"height: 300px;width: 100%;\" ref=\"sourceCharts\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataSource: [],\r\n      mapData: []\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    initMapCharts() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      var myChart = this.$echarts.init(this.$refs.map, \"macarons\");\r\n      let option = {\r\n        title: {\r\n          text: \"地域位置\",\r\n          x: \"left\"\r\n        },\r\n        tooltip: {\r\n          show: true,\r\n          formatter: function(params) {\r\n            if(params.value) {\r\n              return params.name + \"：\" + params.value;\r\n            } else {\r\n              return params.name + \"：\" + \"0\";\r\n            }\r\n          }\r\n        },\r\n        visualMap: {\r\n          show: false,\r\n          inRange: {\r\n            color: [\"#C6E2FF\", \"#409EFF\"]\r\n          }\r\n        },\r\n        geo: {\r\n          roam: false, //禁止缩放\r\n          map: \"china\",\r\n          left: \"left\",\r\n          right: \"0\",\r\n          layoutSize: \"50\",\r\n          label: {\r\n            emphasis: {\r\n              show: false\r\n            }\r\n          },\r\n          itemStyle: {\r\n            emphasis: {\r\n              areaColor: \"#409EFF\"\r\n            }\r\n          },\r\n          regions: [\r\n            {\r\n              name: \"南海诸岛\",\r\n              value: 0,\r\n              itemStyle: {\r\n                normal: {\r\n                  opacity: 1,\r\n                  label: {\r\n                    show: false\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        series: [\r\n          {\r\n            name: \"地域位置\",\r\n            type: \"map\",\r\n            roam: false,\r\n            geoIndex: 0,\r\n            label: {\r\n              show: false\r\n            },\r\n            data: this.mapData\r\n          }\r\n        ]\r\n      };\r\n\r\n      // 绘制图表\r\n      myChart.setOption(option);\r\n    },\r\n    \r\n    initSourceCharts() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      var myChart = this.$echarts.init(this.$refs.sourceCharts, \"macarons\");\r\n      var option = {\r\n        title: {\r\n          text: \"渠道来源\",\r\n          x: \"left\"\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n        },\r\n        legend: {\r\n          orient: \"vertical\",\r\n          left: \"right\",\r\n          data: [\"二维码\", \"微信\", \"链接\"]\r\n        },\r\n        series: [\r\n          {\r\n            name: \"渠道来源\",\r\n            type: \"pie\",\r\n            radius: \"55%\",\r\n            center: [\"50%\", \"60%\"],\r\n            data: this.dataSource,\r\n            itemStyle: {\r\n              emphasis: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      // 绘制图表\r\n      myChart.setOption(option);\r\n    },\r\n\r\n    getDataSource() {\r\n      this.$http\r\n        .get(`/recycle/data_source/${this.$route.query.surveyId}`)\r\n        .then(res => {\r\n          this.dataSource = res.data;\r\n          this.initSourceCharts();\r\n        });\r\n    },\r\n\r\n    getMapData() {\r\n      this.$http\r\n        .get(`/recycle/map/${this.$route.query.surveyId}`)\r\n        .then(res => {\r\n          this.mapData = res.data;\r\n          this.initMapCharts();\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getDataSource();\r\n    this.getMapData();\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/home/design/chart/components"}]}