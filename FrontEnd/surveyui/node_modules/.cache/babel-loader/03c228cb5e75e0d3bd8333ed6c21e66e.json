{"remainingRequest":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/thread-loader/dist/cjs.js!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/Cross.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/Cross.vue","mtime":1605753490114},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUVMgZnJvbSAicXMiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdmFyIHZhbGlkYXRlVmFsdWUgPSBmdW5jdGlvbiB2YWxpZGF0ZVZhbHVlKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBpZiAoX3RoaXMuY3Jvc3NGb3JtLnhWYWx1ZSA9PT0gX3RoaXMuY3Jvc3NGb3JtLnlWYWx1ZSkgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcigi6aKY55uu5LiN6IO96YeN5aSNISIpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9OwoKICAgIHJldHVybiB7CiAgICAgIGNyb3NzRm9ybTogewogICAgICAgIHhWYWx1ZTogIiIsCiAgICAgICAgeVZhbHVlOiAiIgogICAgICB9LAogICAgICBxc2l0ZW1zOiB7fSwKICAgICAgcnVsZXM6IHsKICAgICAgICB4VmFsdWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLor7fmt7vliqDoh6rlj5jph48iLAogICAgICAgICAgdHJpZ2dlcjogImNoYW5nZSIKICAgICAgICB9LCB7CiAgICAgICAgICB2YWxpZGF0b3I6IHZhbGlkYXRlVmFsdWUsCiAgICAgICAgICB0cmlnZ2VyOiAiY2hhbmdlIgogICAgICAgIH1dLAogICAgICAgIHlWYWx1ZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuivt+a3u+WKoOWboOWPmOmHjyIsCiAgICAgICAgICB0cmlnZ2VyOiAiY2hhbmdlIgogICAgICAgIH0sIHsKICAgICAgICAgIHZhbGlkYXRvcjogdmFsaWRhdGVWYWx1ZSwKICAgICAgICAgIHRyaWdnZXI6ICJjaGFuZ2UiCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgdGFibGVIZWFkZXI6IFtdLAogICAgICBjaGFydHM6IGZhbHNlLAogICAgICBteUNoYXJ0OiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UXVlc3RUaXRsZTogZnVuY3Rpb24gZ2V0UXVlc3RUaXRsZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgc3VydmV5SWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5zdXJ2ZXlJZDsKICAgICAgdGhpcy4kaHR0cC5nZXQoInN1cnZleS8iLmNvbmNhdChzdXJ2ZXlJZCkpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMi5xc2l0ZW1zID0gcmVzLmRhdGEucXNpdGVtczsKICAgICAgfSk7CiAgICB9LAogICAgY3Jvc3NBbmFseXNpczogZnVuY3Rpb24gY3Jvc3NBbmFseXNpcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRyZWZzLmNyb3NzRm9ybS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIHZhciBkYXRhID0ge307CiAgICAgICAgICBkYXRhLnhWYWx1ZSA9IF90aGlzMy5jcm9zc0Zvcm0ueFZhbHVlOwogICAgICAgICAgZGF0YS55VmFsdWUgPSBfdGhpczMuY3Jvc3NGb3JtLnlWYWx1ZTsKCiAgICAgICAgICBfdGhpczMuJGh0dHAucG9zdCgicmVjeWNsZS9jcm9zc19hbmFseXNpcyIsIFFTLnN0cmluZ2lmeShkYXRhKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIF90aGlzMy50YWJsZURhdGEgPSByZXMuZGF0YS50YWJsZURhdGE7CiAgICAgICAgICAgIF90aGlzMy50YWJsZUhlYWRlciA9IHJlcy5kYXRhLnRhYmxlSGVhZGVyOwogICAgICAgICAgICBfdGhpczMuY2hhcnRzID0gdHJ1ZTsKICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgX3RoaXMzLmluaXRDb2x1bW5jaGFydCgpOwogICAgICAgICAgICB9LCA1MCk7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgaW5pdENvbHVtbmNoYXJ0OiBmdW5jdGlvbiBpbml0Q29sdW1uY2hhcnQoKSB7CiAgICAgIGlmICh0aGlzLm15Q2hhcnQpIHRoaXMubXlDaGFydC5kaXNwb3NlKCk7CiAgICAgIHZhciBkaW1lbnNpb25zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnRhYmxlSGVhZGVyKSk7CiAgICAgIGRpbWVuc2lvbnMuc3BsaWNlKGRpbWVuc2lvbnMuaW5kZXhPZigi5bCP6K6hIiksIDEpOwogICAgICB2YXIgc2VyaWVzID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRpbWVuc2lvbnMubGVuZ3RoOyBpKyspIHsKICAgICAgICBzZXJpZXMucHVzaCh7CiAgICAgICAgICB0eXBlOiAiYmFyIiwKICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHBvc2l0aW9uOiAidG9wIgogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CgogICAgICBkaW1lbnNpb25zLnVuc2hpZnQoInByb2R1Y3QiKTsKICAgICAgd2luZG93LmNvbnNvbGUubG9nKGRpbWVuc2lvbnMpOwogICAgICB2YXIgc291cmNlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnRhYmxlRGF0YSkpOwogICAgICB2YXIgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmNvbHVtbiwgIm1hY2Fyb25zIik7CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBvcmllbnQ6ICJob3Jpem9udGFsIiwKICAgICAgICAgIGNlbnRlcjogImNlbnRlciIKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHt9LAogICAgICAgIGRhdGFzZXQ6IHsKICAgICAgICAgIGRpbWVuc2lvbnM6IGRpbWVuc2lvbnMsCiAgICAgICAgICBzb3VyY2U6IHNvdXJjZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICJjYXRlZ29yeSIsCiAgICAgICAgICAvLyBheGlzTGFiZWw6IHsKICAgICAgICAgIC8vICAgICAgIGludGVydmFsOjAsLy/ku6PooajmmL7npLrmiYDmnIl46L205qCH562+5pi+56S6CiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBpbnRlcnZhbDogMCwKICAgICAgICAgICAgLy/ku6PooajmmL7npLrmiYDmnIl46L205qCH562+5pi+56S6CiAgICAgICAgICAgIC8v5Z2Q5qCH6L205Yi75bqm5qCH562+55qE55u45YWz6K6+572u44CCCiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKHBhcmFtcykgewogICAgICAgICAgICAgIHZhciBuZXdQYXJhbXNOYW1lID0gIiI7IC8vIOacgOe7iOaLvOaOpeaIkOeahOWtl+espuS4sgoKICAgICAgICAgICAgICB2YXIgcGFyYW1zTmFtZU51bWJlciA9IHBhcmFtcy5sZW5ndGg7IC8vIOWunumZheagh+etvueahOS4quaVsAoKICAgICAgICAgICAgICB2YXIgcHJvdmlkZU51bWJlciA9IDEwOyAvLyDmr4/ooYzog73mmL7npLrnmoTlrZfnmoTkuKrmlbAKCiAgICAgICAgICAgICAgdmFyIHJvd051bWJlciA9IE1hdGguY2VpbChwYXJhbXNOYW1lTnVtYmVyIC8gcHJvdmlkZU51bWJlcik7IC8vIOaNouihjOeahOivne+8jOmcgOimgeaYvuekuuWHoOihjO+8jOWQkeS4iuWPluaVtAoKICAgICAgICAgICAgICAvKioNCiAgICAgICAgICAgICAgICog5Yik5pat5qCH562+55qE5Liq5pWw5piv5ZCm5aSn5LqO6KeE5a6a55qE5Liq5pWw77yMIOWmguaenOWkp+S6ju+8jOWImei/m+ihjOaNouihjOWkhOeQhiDlpoLmnpzkuI3lpKfkuo7vvIzljbPnrYnkuo7miJblsI/kuo7vvIzlsLHov5Tlm57ljp/moIfnrb4NCiAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgLy8g5p2h5Lu2562J5ZCM5LqOcm93TnVtYmVyPjEKCiAgICAgICAgICAgICAgaWYgKHBhcmFtc05hbWVOdW1iZXIgPiBwcm92aWRlTnVtYmVyKSB7CiAgICAgICAgICAgICAgICAvKiog5b6q546v5q+P5LiA6KGMLHDooajnpLrooYwgKi8KICAgICAgICAgICAgICAgIGZvciAodmFyIHAgPSAwOyBwIDwgcm93TnVtYmVyOyBwKyspIHsKICAgICAgICAgICAgICAgICAgdmFyIHRlbXBTdHIgPSAiIjsgLy8g6KGo56S65q+P5LiA5qyh5oiq5Y+W55qE5a2X56ym5LiyCgogICAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSBwICogcHJvdmlkZU51bWJlcjsgLy8g5byA5aeL5oiq5Y+W55qE5L2N572uCgogICAgICAgICAgICAgICAgICB2YXIgZW5kID0gc3RhcnQgKyBwcm92aWRlTnVtYmVyOyAvLyDnu5PmnZ/miKrlj5bnmoTkvY3nva4KICAgICAgICAgICAgICAgICAgLy8g5q2k5aSE54m55q6K5aSE55CG5pyA5ZCO5LiA6KGM55qE57Si5byV5YC8CgogICAgICAgICAgICAgICAgICBpZiAocCA9PSByb3dOdW1iZXIgLSAxKSB7CiAgICAgICAgICAgICAgICAgICAgLy8g5pyA5ZCO5LiA5qyh5LiN5o2i6KGMCiAgICAgICAgICAgICAgICAgICAgdGVtcFN0ciA9IHBhcmFtcy5zdWJzdHJpbmcoc3RhcnQsIHBhcmFtc05hbWVOdW1iZXIpOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIC8vIOavj+S4gOasoeaLvOaOpeWtl+espuS4suW5tuaNouihjAogICAgICAgICAgICAgICAgICAgIHRlbXBTdHIgPSBwYXJhbXMuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpICsgIlxuIjsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgbmV3UGFyYW1zTmFtZSArPSB0ZW1wU3RyOyAvLyDmnIDnu4jmi7zmiJDnmoTlrZfnrKbkuLIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy8g5bCG5pen5qCH562+55qE5YC86LWL57uZ5paw5qCH562+CiAgICAgICAgICAgICAgICBuZXdQYXJhbXNOYW1lID0gcGFyYW1zOwogICAgICAgICAgICAgIH0gLy/lsIbmnIDnu4jnmoTlrZfnrKbkuLLov5Tlm54KCgogICAgICAgICAgICAgIHJldHVybiBuZXdQYXJhbXNOYW1lOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczoge30sCiAgICAgICAgc2VyaWVzOiBzZXJpZXMsCiAgICAgICAgdG9vbGJveDogewogICAgICAgICAgZmVhdHVyZTogewogICAgICAgICAgICBzYXZlQXNJbWFnZToge30gLy8g5L+d5a2Y5Li65Zu+54mHCgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKICAgICAgdGhpcy5teUNoYXJ0ID0gbXlDaGFydDsgLy8g57uY5Yi25Zu+6KGoCgogICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0UXVlc3RUaXRsZSgpOwogIH0KfTs="},{"version":3,"sources":["Cross.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"cross\">\r\n    <el-card>\r\n      <el-row type=\"flex\" justify=\"space-around\">\r\n        <el-col :span=\"10\">\r\n          <i class=\"el-icon-data-analysis\"></i>\r\n          <h4>交叉分析</h4>\r\n          <span class=\"explain\">（仅支持单选题）</span>\r\n        </el-col>\r\n        <el-col :span=\"10\"></el-col>\r\n      </el-row>\r\n      <!-- 选择变量表单 -->\r\n      <el-form\r\n        :model=\"crossForm\"\r\n        :rules=\"rules\"\r\n        label-position=\"top\"\r\n        ref=\"crossForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-row type=\"flex\" justify=\"space-around\">\r\n          <el-col :span=\"10\">\r\n            <el-form-item label=\"自变量X\" prop=\"xValue\">\r\n              <el-select\r\n                v-model=\"crossForm.xValue\"\r\n                clearable\r\n                placeholder=\"添加自变量\"\r\n                style=\"width:100%\"\r\n              >\r\n                <el-option\r\n                  style=\"width:315px\"\r\n                  v-for=\"(item, index) in qsitems\"\r\n                  :key=\"item.qsItemId\"\r\n                  :label=\"index+1+'. '+item.title\"\r\n                  :value=\"item.qsItemId\"\r\n                  :disabled=\"item.type !== 'radio'\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button size=\"mini\" type=\"primary\" @click=\"crossAnalysis\">交叉分析</el-button>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"10\">\r\n            <el-form-item label=\"因变量Y\" prop=\"yValue\">\r\n              <el-select\r\n                v-model=\"crossForm.yValue\"\r\n                clearable\r\n                placeholder=\"添加因变量\"\r\n                style=\"width:100%\"\r\n              >\r\n                <el-option\r\n                  style=\"width:315px\"\r\n                  v-for=\"(item, index) in qsitems\"\r\n                  :key=\"item.qsItemId\"\r\n                  :label=\"index+1+'. '+item.title\"\r\n                  :value=\"item.qsItemId\"\r\n                  :disabled=\"item.type !== 'radio'\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n      <!-- 交叉表格 -->\r\n      <div v-show=\"charts\">\r\n        <el-row style=\"padding:0 32px\">\r\n          <el-table :data=\"tableData\" border show-summary sum-text=\"小计\" style=\"width: 100%;\">\r\n            <el-table-column prop=\"product\" label=\"X\\Y\"></el-table-column>\r\n            <el-table-column\r\n              v-for=\"(item, index) in tableHeader\"\r\n              :key=\"index\"\r\n              :prop=\"item\"\r\n              :label=\"item\"\r\n            ></el-table-column>\r\n          </el-table>\r\n        </el-row>\r\n        <!-- 交叉图表 -->\r\n        <el-row style=\"padding:32px\">\r\n          <div class=\"charts\" ref=\"column\"></div>\r\n        </el-row>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport QS from \"qs\";\r\n\r\nexport default {\r\n  data() {\r\n    let validateValue = (rule, value, callback) => {\r\n      if (this.crossForm.xValue === this.crossForm.yValue) {\r\n        callback(new Error(\"题目不能重复!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      crossForm: {\r\n        xValue: \"\",\r\n        yValue: \"\"\r\n      },\r\n      qsitems: {},\r\n      rules: {\r\n        xValue: [\r\n          { required: true, message: \"请添加自变量\", trigger: \"change\" },\r\n          { validator: validateValue, trigger: \"change\" }\r\n        ],\r\n        yValue: [\r\n          { required: true, message: \"请添加因变量\", trigger: \"change\" },\r\n          { validator: validateValue, trigger: \"change\" }\r\n        ]\r\n      },\r\n      tableData: [],\r\n      tableHeader: [],\r\n      charts: false,\r\n      myChart: null\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    getQuestTitle() {\r\n      let surveyId = this.$route.query.surveyId;\r\n      this.$http.get(`survey/${surveyId}`).then(res => {\r\n        this.qsitems = res.data.qsitems;\r\n      });\r\n    },\r\n\r\n    crossAnalysis() {\r\n      this.$refs.crossForm.validate(valid => {\r\n        if (valid) {\r\n          const data = {};\r\n          data.xValue = this.crossForm.xValue;\r\n          data.yValue = this.crossForm.yValue;\r\n\r\n          this.$http\r\n            .post(\"recycle/cross_analysis\", QS.stringify(data))\r\n            .then(res => {\r\n              this.tableData = res.data.tableData;\r\n              this.tableHeader = res.data.tableHeader;\r\n              this.charts = true;\r\n              setTimeout(() => {\r\n                this.initColumnchart();\r\n              }, 50);\r\n            });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    initColumnchart() {\r\n      if(this.myChart) this.myChart.dispose();\r\n\r\n      let dimensions = JSON.parse(JSON.stringify(this.tableHeader));\r\n      dimensions.splice(dimensions.indexOf(\"小计\"), 1);\r\n      let series = [];\r\n      for (let i = 0; i < dimensions.length; i++) {\r\n        series.push({\r\n          type: \"bar\",\r\n          label: {\r\n            show: true,\r\n            position: \"top\"\r\n          }\r\n        });\r\n      }\r\n      dimensions.unshift(\"product\");\r\n      window.console.log(dimensions);\r\n      let source = JSON.parse(JSON.stringify(this.tableData));\r\n\r\n      let myChart = this.$echarts.init(this.$refs.column, \"macarons\");\r\n      let option = {\r\n        legend: {\r\n          orient: \"horizontal\",\r\n          center: \"center\"\r\n        },\r\n        tooltip: {},\r\n        dataset: {\r\n          dimensions: dimensions,\r\n          source: source\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          // axisLabel: {\r\n          //       interval:0,//代表显示所有x轴标签显示\r\n          //   }\r\n          axisLabel: {\r\n            interval:0,//代表显示所有x轴标签显示\r\n            //坐标轴刻度标签的相关设置。\r\n            formatter: function(params) {\r\n              var newParamsName = \"\"; // 最终拼接成的字符串\r\n              var paramsNameNumber = params.length; // 实际标签的个数\r\n              var provideNumber = 10; // 每行能显示的字的个数\r\n              var rowNumber = Math.ceil(paramsNameNumber / provideNumber); // 换行的话，需要显示几行，向上取整\r\n              /**\r\n               * 判断标签的个数是否大于规定的个数， 如果大于，则进行换行处理 如果不大于，即等于或小于，就返回原标签\r\n               */\r\n              // 条件等同于rowNumber>1\r\n              if (paramsNameNumber > provideNumber) {\r\n                /** 循环每一行,p表示行 */\r\n                for (var p = 0; p < rowNumber; p++) {\r\n                  var tempStr = \"\"; // 表示每一次截取的字符串\r\n                  var start = p * provideNumber; // 开始截取的位置\r\n                  var end = start + provideNumber; // 结束截取的位置\r\n                  // 此处特殊处理最后一行的索引值\r\n                  if (p == rowNumber - 1) {\r\n                    // 最后一次不换行\r\n                    tempStr = params.substring(start, paramsNameNumber);\r\n                  } else {\r\n                    // 每一次拼接字符串并换行\r\n                    tempStr = params.substring(start, end) + \"\\n\";\r\n                  }\r\n                  newParamsName += tempStr; // 最终拼成的字符串\r\n                }\r\n              } else {\r\n                // 将旧标签的值赋给新标签\r\n                newParamsName = params;\r\n              }\r\n              //将最终的字符串返回\r\n              return newParamsName;\r\n            }\r\n          }\r\n        },\r\n        yAxis: {},\r\n        series: series,\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {} // 保存为图片\r\n          }\r\n        }\r\n      };\r\n      this.myChart = myChart;\r\n      // 绘制图表\r\n      myChart.setOption(option);\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.getQuestTitle();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cross {\r\n  width: 800px;\r\n  margin: 20px auto;\r\n}\r\nh4 {\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n}\r\n.explain {\r\n  color: #4f4f4f;\r\n  font-size: 14px;\r\n}\r\n.charts {\r\n  height: 280px;\r\n  padding-top: 20px;\r\n  width: 100%;\r\n  border: 1px solid #d6d6d6;\r\n  border-radius: 10px;\r\n}\r\n</style>"],"sourceRoot":"src/views/home/design/chart"}]}