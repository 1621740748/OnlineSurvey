{"remainingRequest":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/Cross.vue?vue&type=style&index=0&id=87e2f928&scoped=true&lang=css&","dependencies":[{"path":"/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/Cross.vue","mtime":1605753490114},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNyb3NzIHsNCiAgd2lkdGg6IDgwMHB4Ow0KICBtYXJnaW46IDIwcHggYXV0bzsNCn0NCmg0IHsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICBtYXJnaW4tbGVmdDogNXB4Ow0KfQ0KLmV4cGxhaW4gew0KICBjb2xvcjogIzRmNGY0ZjsNCiAgZm9udC1zaXplOiAxNHB4Ow0KfQ0KLmNoYXJ0cyB7DQogIGhlaWdodDogMjgwcHg7DQogIHBhZGRpbmctdG9wOiAyMHB4Ow0KICB3aWR0aDogMTAwJTsNCiAgYm9yZGVyOiAxcHggc29saWQgI2Q2ZDZkNjsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCn0NCg=="},{"version":3,"sources":["Cross.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Cross.vue","sourceRoot":"src/views/home/design/chart","sourcesContent":["<template>\r\n  <div class=\"cross\">\r\n    <el-card>\r\n      <el-row type=\"flex\" justify=\"space-around\">\r\n        <el-col :span=\"10\">\r\n          <i class=\"el-icon-data-analysis\"></i>\r\n          <h4>交叉分析</h4>\r\n          <span class=\"explain\">（仅支持单选题）</span>\r\n        </el-col>\r\n        <el-col :span=\"10\"></el-col>\r\n      </el-row>\r\n      <!-- 选择变量表单 -->\r\n      <el-form\r\n        :model=\"crossForm\"\r\n        :rules=\"rules\"\r\n        label-position=\"top\"\r\n        ref=\"crossForm\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-row type=\"flex\" justify=\"space-around\">\r\n          <el-col :span=\"10\">\r\n            <el-form-item label=\"自变量X\" prop=\"xValue\">\r\n              <el-select\r\n                v-model=\"crossForm.xValue\"\r\n                clearable\r\n                placeholder=\"添加自变量\"\r\n                style=\"width:100%\"\r\n              >\r\n                <el-option\r\n                  style=\"width:315px\"\r\n                  v-for=\"(item, index) in qsitems\"\r\n                  :key=\"item.qsItemId\"\r\n                  :label=\"index+1+'. '+item.title\"\r\n                  :value=\"item.qsItemId\"\r\n                  :disabled=\"item.type !== 'radio'\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button size=\"mini\" type=\"primary\" @click=\"crossAnalysis\">交叉分析</el-button>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"10\">\r\n            <el-form-item label=\"因变量Y\" prop=\"yValue\">\r\n              <el-select\r\n                v-model=\"crossForm.yValue\"\r\n                clearable\r\n                placeholder=\"添加因变量\"\r\n                style=\"width:100%\"\r\n              >\r\n                <el-option\r\n                  style=\"width:315px\"\r\n                  v-for=\"(item, index) in qsitems\"\r\n                  :key=\"item.qsItemId\"\r\n                  :label=\"index+1+'. '+item.title\"\r\n                  :value=\"item.qsItemId\"\r\n                  :disabled=\"item.type !== 'radio'\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n      <!-- 交叉表格 -->\r\n      <div v-show=\"charts\">\r\n        <el-row style=\"padding:0 32px\">\r\n          <el-table :data=\"tableData\" border show-summary sum-text=\"小计\" style=\"width: 100%;\">\r\n            <el-table-column prop=\"product\" label=\"X\\Y\"></el-table-column>\r\n            <el-table-column\r\n              v-for=\"(item, index) in tableHeader\"\r\n              :key=\"index\"\r\n              :prop=\"item\"\r\n              :label=\"item\"\r\n            ></el-table-column>\r\n          </el-table>\r\n        </el-row>\r\n        <!-- 交叉图表 -->\r\n        <el-row style=\"padding:32px\">\r\n          <div class=\"charts\" ref=\"column\"></div>\r\n        </el-row>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport QS from \"qs\";\r\n\r\nexport default {\r\n  data() {\r\n    let validateValue = (rule, value, callback) => {\r\n      if (this.crossForm.xValue === this.crossForm.yValue) {\r\n        callback(new Error(\"题目不能重复!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      crossForm: {\r\n        xValue: \"\",\r\n        yValue: \"\"\r\n      },\r\n      qsitems: {},\r\n      rules: {\r\n        xValue: [\r\n          { required: true, message: \"请添加自变量\", trigger: \"change\" },\r\n          { validator: validateValue, trigger: \"change\" }\r\n        ],\r\n        yValue: [\r\n          { required: true, message: \"请添加因变量\", trigger: \"change\" },\r\n          { validator: validateValue, trigger: \"change\" }\r\n        ]\r\n      },\r\n      tableData: [],\r\n      tableHeader: [],\r\n      charts: false,\r\n      myChart: null\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    getQuestTitle() {\r\n      let surveyId = this.$route.query.surveyId;\r\n      this.$http.get(`survey/${surveyId}`).then(res => {\r\n        this.qsitems = res.data.qsitems;\r\n      });\r\n    },\r\n\r\n    crossAnalysis() {\r\n      this.$refs.crossForm.validate(valid => {\r\n        if (valid) {\r\n          const data = {};\r\n          data.xValue = this.crossForm.xValue;\r\n          data.yValue = this.crossForm.yValue;\r\n\r\n          this.$http\r\n            .post(\"recycle/cross_analysis\", QS.stringify(data))\r\n            .then(res => {\r\n              this.tableData = res.data.tableData;\r\n              this.tableHeader = res.data.tableHeader;\r\n              this.charts = true;\r\n              setTimeout(() => {\r\n                this.initColumnchart();\r\n              }, 50);\r\n            });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    initColumnchart() {\r\n      if(this.myChart) this.myChart.dispose();\r\n\r\n      let dimensions = JSON.parse(JSON.stringify(this.tableHeader));\r\n      dimensions.splice(dimensions.indexOf(\"小计\"), 1);\r\n      let series = [];\r\n      for (let i = 0; i < dimensions.length; i++) {\r\n        series.push({\r\n          type: \"bar\",\r\n          label: {\r\n            show: true,\r\n            position: \"top\"\r\n          }\r\n        });\r\n      }\r\n      dimensions.unshift(\"product\");\r\n      window.console.log(dimensions);\r\n      let source = JSON.parse(JSON.stringify(this.tableData));\r\n\r\n      let myChart = this.$echarts.init(this.$refs.column, \"macarons\");\r\n      let option = {\r\n        legend: {\r\n          orient: \"horizontal\",\r\n          center: \"center\"\r\n        },\r\n        tooltip: {},\r\n        dataset: {\r\n          dimensions: dimensions,\r\n          source: source\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          // axisLabel: {\r\n          //       interval:0,//代表显示所有x轴标签显示\r\n          //   }\r\n          axisLabel: {\r\n            interval:0,//代表显示所有x轴标签显示\r\n            //坐标轴刻度标签的相关设置。\r\n            formatter: function(params) {\r\n              var newParamsName = \"\"; // 最终拼接成的字符串\r\n              var paramsNameNumber = params.length; // 实际标签的个数\r\n              var provideNumber = 10; // 每行能显示的字的个数\r\n              var rowNumber = Math.ceil(paramsNameNumber / provideNumber); // 换行的话，需要显示几行，向上取整\r\n              /**\r\n               * 判断标签的个数是否大于规定的个数， 如果大于，则进行换行处理 如果不大于，即等于或小于，就返回原标签\r\n               */\r\n              // 条件等同于rowNumber>1\r\n              if (paramsNameNumber > provideNumber) {\r\n                /** 循环每一行,p表示行 */\r\n                for (var p = 0; p < rowNumber; p++) {\r\n                  var tempStr = \"\"; // 表示每一次截取的字符串\r\n                  var start = p * provideNumber; // 开始截取的位置\r\n                  var end = start + provideNumber; // 结束截取的位置\r\n                  // 此处特殊处理最后一行的索引值\r\n                  if (p == rowNumber - 1) {\r\n                    // 最后一次不换行\r\n                    tempStr = params.substring(start, paramsNameNumber);\r\n                  } else {\r\n                    // 每一次拼接字符串并换行\r\n                    tempStr = params.substring(start, end) + \"\\n\";\r\n                  }\r\n                  newParamsName += tempStr; // 最终拼成的字符串\r\n                }\r\n              } else {\r\n                // 将旧标签的值赋给新标签\r\n                newParamsName = params;\r\n              }\r\n              //将最终的字符串返回\r\n              return newParamsName;\r\n            }\r\n          }\r\n        },\r\n        yAxis: {},\r\n        series: series,\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {} // 保存为图片\r\n          }\r\n        }\r\n      };\r\n      this.myChart = myChart;\r\n      // 绘制图表\r\n      myChart.setOption(option);\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.getQuestTitle();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cross {\r\n  width: 800px;\r\n  margin: 20px auto;\r\n}\r\nh4 {\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n}\r\n.explain {\r\n  color: #4f4f4f;\r\n  font-size: 14px;\r\n}\r\n.charts {\r\n  height: 280px;\r\n  padding-top: 20px;\r\n  width: 100%;\r\n  border: 1px solid #d6d6d6;\r\n  border-radius: 10px;\r\n}\r\n</style>"]}]}