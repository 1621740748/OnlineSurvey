{"remainingRequest":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/components/DataSource.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/components/DataSource.vue","mtime":1605753490114},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGRhdGFTb3VyY2U6IFtdLA0KICAgICAgbWFwRGF0YTogW10NCiAgICB9Ow0KICB9LA0KDQogIG1ldGhvZHM6IHsNCiAgICBpbml0TWFwQ2hhcnRzKCkgew0KICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iw0KICAgICAgdmFyIG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5tYXAsICJtYWNhcm9ucyIpOw0KICAgICAgbGV0IG9wdGlvbiA9IHsNCiAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICB0ZXh0OiAi5Zyw5Z+f5L2N572uIiwNCiAgICAgICAgICB4OiAibGVmdCINCiAgICAgICAgfSwNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbihwYXJhbXMpIHsNCiAgICAgICAgICAgIGlmKHBhcmFtcy52YWx1ZSkgew0KICAgICAgICAgICAgICByZXR1cm4gcGFyYW1zLm5hbWUgKyAi77yaIiArIHBhcmFtcy52YWx1ZTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgIHJldHVybiBwYXJhbXMubmFtZSArICLvvJoiICsgIjAiOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgdmlzdWFsTWFwOiB7DQogICAgICAgICAgc2hvdzogZmFsc2UsDQogICAgICAgICAgaW5SYW5nZTogew0KICAgICAgICAgICAgY29sb3I6IFsiI0M2RTJGRiIsICIjNDA5RUZGIl0NCiAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGdlbzogew0KICAgICAgICAgIHJvYW06IGZhbHNlLCAvL+emgeatoue8qeaUvg0KICAgICAgICAgIG1hcDogImNoaW5hIiwNCiAgICAgICAgICBsZWZ0OiAibGVmdCIsDQogICAgICAgICAgcmlnaHQ6ICIwIiwNCiAgICAgICAgICBsYXlvdXRTaXplOiAiNTAiLA0KICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICBlbXBoYXNpczogew0KICAgICAgICAgICAgICBzaG93OiBmYWxzZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICBlbXBoYXNpczogew0KICAgICAgICAgICAgICBhcmVhQ29sb3I6ICIjNDA5RUZGIg0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgICAgcmVnaW9uczogWw0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICBuYW1lOiAi5Y2X5rW36K+45bKbIiwNCiAgICAgICAgICAgICAgdmFsdWU6IDAsDQogICAgICAgICAgICAgIGl0ZW1TdHlsZTogew0KICAgICAgICAgICAgICAgIG5vcm1hbDogew0KICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMSwNCiAgICAgICAgICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlDQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgXQ0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBuYW1lOiAi5Zyw5Z+f5L2N572uIiwNCiAgICAgICAgICAgIHR5cGU6ICJtYXAiLA0KICAgICAgICAgICAgcm9hbTogZmFsc2UsDQogICAgICAgICAgICBnZW9JbmRleDogMCwNCiAgICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICAgIHNob3c6IGZhbHNlDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZGF0YTogdGhpcy5tYXBEYXRhDQogICAgICAgICAgfQ0KICAgICAgICBdDQogICAgICB9Ow0KDQogICAgICAvLyDnu5jliLblm77ooagNCiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7DQogICAgfSwNCiAgICANCiAgICBpbml0U291cmNlQ2hhcnRzKCkgew0KICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iw0KICAgICAgdmFyIG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5zb3VyY2VDaGFydHMsICJtYWNhcm9ucyIpOw0KICAgICAgdmFyIG9wdGlvbiA9IHsNCiAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICB0ZXh0OiAi5rig6YGT5p2l5rqQIiwNCiAgICAgICAgICB4OiAibGVmdCINCiAgICAgICAgfSwNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgIHRyaWdnZXI6ICJpdGVtIiwNCiAgICAgICAgICBmb3JtYXR0ZXI6ICJ7YX0gPGJyLz57Yn0gOiB7Y30gKHtkfSUpIg0KICAgICAgICB9LA0KICAgICAgICBsZWdlbmQ6IHsNCiAgICAgICAgICBvcmllbnQ6ICJ2ZXJ0aWNhbCIsDQogICAgICAgICAgbGVmdDogInJpZ2h0IiwNCiAgICAgICAgICBkYXRhOiBbIuS6jOe7tOeggSIsICLlvq7kv6EiLCAi6ZO+5o6lIl0NCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgbmFtZTogIua4oOmBk+adpea6kCIsDQogICAgICAgICAgICB0eXBlOiAicGllIiwNCiAgICAgICAgICAgIHJhZGl1czogIjU1JSIsDQogICAgICAgICAgICBjZW50ZXI6IFsiNTAlIiwgIjYwJSJdLA0KICAgICAgICAgICAgZGF0YTogdGhpcy5kYXRhU291cmNlLA0KICAgICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICAgIGVtcGhhc2lzOiB7DQogICAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMTAsDQogICAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WDogMCwNCiAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogInJnYmEoMCwgMCwgMCwgMC41KSINCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfTsNCiAgICAgIC8vIOe7mOWItuWbvuihqA0KICAgICAgbXlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsNCiAgICB9LA0KDQogICAgZ2V0RGF0YVNvdXJjZSgpIHsNCiAgICAgIHRoaXMuJGh0dHANCiAgICAgICAgLmdldChgL3JlY3ljbGUvZGF0YV9zb3VyY2UvJHt0aGlzLiRyb3V0ZS5xdWVyeS5zdXJ2ZXlJZH1gKQ0KICAgICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAgIHRoaXMuZGF0YVNvdXJjZSA9IHJlcy5kYXRhOw0KICAgICAgICAgIHRoaXMuaW5pdFNvdXJjZUNoYXJ0cygpOw0KICAgICAgICB9KTsNCiAgICB9LA0KDQogICAgZ2V0TWFwRGF0YSgpIHsNCiAgICAgIHRoaXMuJGh0dHANCiAgICAgICAgLmdldChgL3JlY3ljbGUvbWFwLyR7dGhpcy4kcm91dGUucXVlcnkuc3VydmV5SWR9YCkNCiAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICB0aGlzLm1hcERhdGEgPSByZXMuZGF0YTsNCiAgICAgICAgICB0aGlzLmluaXRNYXBDaGFydHMoKTsNCiAgICAgICAgfSk7DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuZ2V0RGF0YVNvdXJjZSgpOw0KICAgIHRoaXMuZ2V0TWFwRGF0YSgpOw0KICB9DQp9Ow0K"},{"version":3,"sources":["DataSource.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"DataSource.vue","sourceRoot":"src/views/home/design/chart/components","sourcesContent":["<template>\r\n  <div style=\"margin-top: 20px;\">\r\n    <el-row :gutter=\"10\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div style=\"height: 300px;width: 100%;\" ref=\"map\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div style=\"height: 300px;width: 100%;\" ref=\"sourceCharts\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataSource: [],\r\n      mapData: []\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    initMapCharts() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      var myChart = this.$echarts.init(this.$refs.map, \"macarons\");\r\n      let option = {\r\n        title: {\r\n          text: \"地域位置\",\r\n          x: \"left\"\r\n        },\r\n        tooltip: {\r\n          show: true,\r\n          formatter: function(params) {\r\n            if(params.value) {\r\n              return params.name + \"：\" + params.value;\r\n            } else {\r\n              return params.name + \"：\" + \"0\";\r\n            }\r\n          }\r\n        },\r\n        visualMap: {\r\n          show: false,\r\n          inRange: {\r\n            color: [\"#C6E2FF\", \"#409EFF\"]\r\n          }\r\n        },\r\n        geo: {\r\n          roam: false, //禁止缩放\r\n          map: \"china\",\r\n          left: \"left\",\r\n          right: \"0\",\r\n          layoutSize: \"50\",\r\n          label: {\r\n            emphasis: {\r\n              show: false\r\n            }\r\n          },\r\n          itemStyle: {\r\n            emphasis: {\r\n              areaColor: \"#409EFF\"\r\n            }\r\n          },\r\n          regions: [\r\n            {\r\n              name: \"南海诸岛\",\r\n              value: 0,\r\n              itemStyle: {\r\n                normal: {\r\n                  opacity: 1,\r\n                  label: {\r\n                    show: false\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        series: [\r\n          {\r\n            name: \"地域位置\",\r\n            type: \"map\",\r\n            roam: false,\r\n            geoIndex: 0,\r\n            label: {\r\n              show: false\r\n            },\r\n            data: this.mapData\r\n          }\r\n        ]\r\n      };\r\n\r\n      // 绘制图表\r\n      myChart.setOption(option);\r\n    },\r\n    \r\n    initSourceCharts() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      var myChart = this.$echarts.init(this.$refs.sourceCharts, \"macarons\");\r\n      var option = {\r\n        title: {\r\n          text: \"渠道来源\",\r\n          x: \"left\"\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n        },\r\n        legend: {\r\n          orient: \"vertical\",\r\n          left: \"right\",\r\n          data: [\"二维码\", \"微信\", \"链接\"]\r\n        },\r\n        series: [\r\n          {\r\n            name: \"渠道来源\",\r\n            type: \"pie\",\r\n            radius: \"55%\",\r\n            center: [\"50%\", \"60%\"],\r\n            data: this.dataSource,\r\n            itemStyle: {\r\n              emphasis: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      // 绘制图表\r\n      myChart.setOption(option);\r\n    },\r\n\r\n    getDataSource() {\r\n      this.$http\r\n        .get(`/recycle/data_source/${this.$route.query.surveyId}`)\r\n        .then(res => {\r\n          this.dataSource = res.data;\r\n          this.initSourceCharts();\r\n        });\r\n    },\r\n\r\n    getMapData() {\r\n      this.$http\r\n        .get(`/recycle/map/${this.$route.query.surveyId}`)\r\n        .then(res => {\r\n          this.mapData = res.data;\r\n          this.initMapCharts();\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getDataSource();\r\n    this.getMapData();\r\n  }\r\n};\r\n</script>\r\n"]}]}