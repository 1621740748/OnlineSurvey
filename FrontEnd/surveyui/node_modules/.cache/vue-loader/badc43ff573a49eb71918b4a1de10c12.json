{"remainingRequest":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/Recycle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/OnlineSurvey/FrontEnd/surveyui/src/views/home/design/chart/Recycle.vue","mtime":1605753490114},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/OnlineSurvey/FrontEnd/surveyui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Recycle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Recycle.vue","sourceRoot":"src/views/home/design/chart","sourcesContent":["<template>\r\n  <div class=\"recycle\" ref=\"recycle\">\r\n    <!-- 下载 -->\r\n    <div style=\"float:right;margin:20px 0 0 5px;\">\r\n    <el-button type=\"primary\" size=\"small\" @click=\"saveAsImage('dataReport', '统计报表')\" style=\"display:block;margin:5px auto;\">\r\n      <i\r\n        class=\"el-icon-download\"\r\n        style=\"display:block;font-size:16px;font-weight:bold;margin-bottom:5px\"\r\n      ></i>下载\r\n    </el-button>\r\n    <!-- <el-button type=\"primary\" size=\"small\" @click=\"$print($refs.dataReport)\" style=\"display:block;margin:5px auto;\">\r\n      <i\r\n        class=\"el-icon-printer\"\r\n        style=\"display:block;font-size:16px;font-weight:bold;margin-bottom:5px\"\r\n      ></i>打印\r\n    </el-button> -->\r\n    </div>\r\n      <el-card>\r\n    <div class=\"dataReport\" ref=\"dataReport\" style=\"padding:0 32px;\">\r\n      <i class=\"el-icon-data-line\"></i>\r\n          <h4>数据分析</h4>\r\n        <div v-if=\"questions.length == 0\">暂无数据</div>\r\n        <div\r\n          v-for=\"(item, index) in questions\"\r\n          :key=\"index\"\r\n          style=\"margin-bottom:30px;padding-bottom:30px;border-bottom: 1px dashed #d6d6d6;\"\r\n        >\r\n          第{{index+1}}题：{{item.title}}\r\n          <span class=\"must\" v-if=\"item.isRequired == 1\">*</span>\r\n          <span style=\"color:#999;margin-left:10px;\">{{item.type | typeFilter(types)}}</span>\r\n          <!-- 选择题/评分题显示表格 -->\r\n          <div v-if=\"item.type=='radio' || item.type=='checkbox' || item.type=='rate'\">\r\n            <el-table :data=\"item.options\" border stripe style=\"margin:10px 0px;\">\r\n              <el-table-column\r\n                v-if=\"item.type=='radio' || item.type=='checkbox'\"\r\n                prop=\"value\"\r\n                label=\"选项\"\r\n                align=\"center\"\r\n                sortable\r\n              ></el-table-column>\r\n              <el-table-column\r\n                v-if=\"item.type=='rate'\"\r\n                prop=\"value\"\r\n                label=\"评级\"\r\n                sortable\r\n                align=\"center\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  {{scope.row.value}}星\r\n                  <i\r\n                    v-for=\"indx of Number(scope.row.value)\"\r\n                    :key=\"'on'+indx\"\r\n                    class=\"el-icon-star-on\"\r\n                    style=\"color:#f7ba2a;\"\r\n                  ></i>\r\n                  <i\r\n                    v-for=\"indx of (5-Number(scope.row.value))\"\r\n                    :key=\"'off'+indx\"\r\n                    class=\"el-icon-star-off\"\r\n                    style=\"color:#c6d1de\"\r\n                  ></i>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"number\" label=\"小计\" align=\"center\" sortable></el-table-column>\r\n              <el-table-column prop label=\"比例\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-progress v-if=\"sums[index]==0\" :percentage=\"0\"></el-progress>\r\n                  <el-progress\r\n                    v-if=\"!sums[index]==0\"\r\n                    :percentage=\"Number((scope.row.number / sums[index] * 100).toFixed(2))\"\r\n                  ></el-progress>\r\n                </template>\r\n              </el-table-column>\r\n              <template slot=\"append\">\r\n                <el-alert type=\"info\" :closable=\"false\" center>\r\n                  <strong slot=\"title\">本题有效填写人次：{{item.valid}}</strong>\r\n                </el-alert>\r\n              </template>\r\n            </el-table>\r\n            <!-- 评分题显示平均评分 -->\r\n            <div v-if=\"item.type=='rate'\" style=\"margin:10px 0px;\">\r\n              <el-tag>平均评分</el-tag>\r\n              <el-rate\r\n                v-model=\"rateAvgs[index]\"\r\n                disabled\r\n                show-score\r\n                text-color=\"#ff9900\"\r\n                style=\"display:inline-block;margin-left:5px;\"\r\n              ></el-rate>\r\n            </div>\r\n            <!-- 显示统计图表 -->\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"initColumnchart(item, index)\">柱形图</el-button>\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"initPiechart(item, index)\">饼状图</el-button>\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"initRingchart(item, index)\">环形图</el-button>\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"initBarchart(item, index)\">条形图</el-button>\r\n            <div v-show=\"charts[index] == 1\" class=\"charts\" :ref=\"'column'+index\"></div>\r\n            <div v-show=\"charts[index] == 2\" class=\"charts\" :ref=\"'pie'+index\"></div>\r\n            <div v-show=\"charts[index] == 3\" class=\"charts\" :ref=\"'ring'+index\"></div>\r\n            <div v-show=\"charts[index] == 4\" class=\"charts\" :ref=\"'bar'+index\"></div>\r\n          </div>\r\n          <!-- 文本题显示按钮 -->\r\n          <el-button\r\n            v-if=\"item.type=='textarea'\"\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            style=\"display:block;margin:10px 0px;\"\r\n            @click=\"lookTextDetail(`第${index+1}题：${item.title}`, item.id)\"\r\n          >查看详细信息</el-button>\r\n        </div>\r\n    </div>\r\n      </el-card>\r\n    <el-dialog\r\n      :title=\"textTitle\"\r\n      :visible.sync=\"dialogTableVisible\"\r\n      :append-to-body=\"true\"\r\n      width=\"60%\"\r\n    >\r\n      <el-table :data=\"textareaData\">\r\n        <el-table-column type=\"index\" label=\"序号\" width=\"75\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{scope.$index+(pageinfo.currentPage - 1) * pageinfo.pageSize + 1}}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column property=\"submitDate\" label=\"提交答卷时间\" width=\"200\" align=\"center\"></el-table-column>\r\n        <el-table-column property=\"content\" label=\"答案文本\"></el-table-column>\r\n        <el-table-column label=\"查看答卷\" width=\"100\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              type=\"text\"\r\n              @click=\"openRecycleSurvey(scope.$index+(pageinfo.currentPage - 1) * pageinfo.pageSize + 1, scope.row.recycleId)\"\r\n            >查看答卷</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        background\r\n        layout=\"prev, pager, next,sizes,total\"\r\n        :page-sizes=\"[5, 10, 15, 20]\"\r\n        :page-size=\"pageinfo.pageSize\"\r\n        :current-page=\"pageinfo.currentPage\"\r\n        :total=\"pageinfo.total\"\r\n        style=\"margin-top: 10px;\"\r\n        @current-change=\"textCurrentChange\"\r\n        @size-change=\"textSizeChange\"\r\n      ></el-pagination>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport QS from \"qs\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      sums: [],\r\n      surveyId: \"\",\r\n      questions: {},\r\n      rateAvgs: [],\r\n      types: [\r\n        { value: \"radio\", text: \"[单选题]\" },\r\n        { value: \"checkbox\", text: \"[多选题]\" },\r\n        { value: \"textarea\", text: \"[文本题]\" },\r\n        { value: \"rate\", text: \"[评分题]\" }\r\n      ],\r\n      textareaData: [],\r\n      currentTextId: \"\",\r\n      textTitle: \"\",\r\n      dialogTableVisible: false,\r\n      pageinfo: {\r\n        //每页数量\r\n        pageSize: 5,\r\n        //当前页\r\n        currentPage: 1,\r\n        //总数量\r\n        total: 0\r\n      },\r\n      // charts\r\n      charts: []\r\n    };\r\n  },\r\n\r\n  filters: {\r\n    typeFilter(value, types) {\r\n      for (let i = 0; i < types.length; i++) {\r\n        if (value == types[i].value) {\r\n          return types[i].text;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // 向服务器请求问卷信息\r\n    getQuestions() {\r\n      this.$http.post(\"recycle/detail/\" + this.surveyId).then(res => {\r\n        this.questions = res.data;\r\n        // 设置统计报表的初始显示状态\r\n        for (const key in this.questions) {\r\n          this.$set(this.charts, key, 0);\r\n        }\r\n        // 算出总数用作百分数计算的分母\r\n        for (const key in this.questions) {\r\n          let sum = 0;\r\n          const options = this.questions[key].options;\r\n          if (options != null) {\r\n            options.forEach(item => {\r\n              sum += item.number;\r\n            });\r\n          }\r\n          this.sums.push(sum);\r\n        }\r\n        // 算出平均评分\r\n        for (const key in this.questions) {\r\n          let avg = 0;\r\n          const options = this.questions[key].options;\r\n          if (options != null && this.questions[key].type == \"rate\") {\r\n            options.forEach(item => {\r\n              avg +=\r\n                (Number(item.value) * Number(item.number)) / this.sums[key];\r\n            });\r\n          }\r\n          this.rateAvgs.push(Number(avg.toFixed(1)));\r\n        }\r\n      });\r\n    },\r\n\r\n    lookTextDetail(title, id) {\r\n      this.dialogTableVisible = true;\r\n      this.currentTextId = id;\r\n      this.textTitle = title;\r\n      this.pageinfo.pageSize = 5;\r\n      this.pageinfo.currentPage = 1;\r\n      this.textPageQuery(id);\r\n    },\r\n\r\n    textPageQuery(id) {\r\n      const data = {};\r\n      data.questionId = id;\r\n      data.page = this.pageinfo.currentPage;\r\n      data.size = this.pageinfo.pageSize;\r\n      this.$http\r\n        .post(\"recycle/detail/textarea\", QS.stringify(data))\r\n        .then(res => {\r\n          this.textareaData = res.data.list;\r\n          this.pageinfo.total = res.data.count;\r\n        });\r\n    },\r\n\r\n    //根据页码查询数据\r\n    textCurrentChange(page) {\r\n      this.pageinfo.currentPage = page;\r\n      this.textPageQuery(this.currentTextId);\r\n    },\r\n\r\n    textSizeChange(pageSize) {\r\n      this.pageinfo.pageSize = pageSize;\r\n      this.pageinfo.currentPage = 1;\r\n      this.textPageQuery(this.currentTextId);\r\n    },\r\n\r\n    // 打开新标签页查看答卷\r\n    openRecycleSurvey(id, recycleId) {\r\n      window.open(\r\n        `#/view/recycle?id=${id}&recycleId=${recycleId}&surveyId=${this.surveyId}`\r\n      );\r\n    },\r\n    /**\r\n     * 柱形图\r\n     */\r\n    initColumnchart(item, index) {\r\n      this.charts[index] != 1\r\n        ? this.$set(this.charts, index, 1)\r\n        : this.$set(this.charts, index, 0);\r\n      if (this.charts[index] === 1) {\r\n        const xdata = [];\r\n        for (const key in item.options) {\r\n          xdata.push(item.options[key].value);\r\n        }\r\n        const ydata = [];\r\n        for (const key in item.options) {\r\n          ydata.push(item.options[key].number);\r\n        }\r\n        this.$nextTick(() => {\r\n          var myChart = this.$echarts.init(\r\n            this.$refs[\"column\" + index][0],\r\n            \"macarons\"\r\n          );\r\n          let option = {\r\n            xAxis: {\r\n              type: \"category\",\r\n              data: xdata\r\n            },\r\n            yAxis: {\r\n              type: \"value\"\r\n            },\r\n            tooltip: {},\r\n            series: [\r\n              {\r\n                data: ydata,\r\n                barWidth: \"30%\",\r\n                type: \"bar\",\r\n                label: {\r\n                  show: true,\r\n                  position: \"top\"\r\n                }\r\n              }\r\n            ],\r\n            toolbox: {\r\n              feature: {\r\n                saveAsImage: {} // 保存为图片\r\n              }\r\n            }\r\n          };\r\n          // 绘制图表\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * 饼状图\r\n     */\r\n    initPiechart(item, index) {\r\n      this.charts[index] != 2\r\n        ? this.$set(this.charts, index, 2)\r\n        : this.$set(this.charts, index, 0);\r\n\r\n      const value = [];\r\n      for (const key in item.options) {\r\n        value.push(item.options[key].value);\r\n      }\r\n      const data = [];\r\n      for (const key in item.options) {\r\n        const temp = {};\r\n        temp.name = item.options[key].value;\r\n        temp.value = item.options[key].number;\r\n        data.push(temp);\r\n      }\r\n      if (this.charts[index] === 2) {\r\n        this.$nextTick(() => {\r\n          var myChart = this.$echarts.init(\r\n            this.$refs[\"pie\" + index][0],\r\n            \"macarons\"\r\n          );\r\n          var option = {\r\n            tooltip: {\r\n              trigger: \"item\",\r\n              formatter: \"{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n              orient: \"horizontal\",\r\n              center: \"center\",\r\n              data: value\r\n            },\r\n            series: [\r\n              {\r\n                type: \"pie\",\r\n                radius: \"55%\",\r\n                center: [\"50%\", \"50%\"],\r\n                data: data,\r\n                itemStyle: {\r\n                  emphasis: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n                  }\r\n                }\r\n              }\r\n            ],\r\n            toolbox: {\r\n              feature: {\r\n                saveAsImage: {} // 保存为图片\r\n              }\r\n            }\r\n          };\r\n          // 绘制图表\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * 环形图\r\n     */\r\n    initRingchart(item, index) {\r\n      this.charts[index] != 3\r\n        ? this.$set(this.charts, index, 3)\r\n        : this.$set(this.charts, index, 0);\r\n\r\n      const value = [];\r\n      for (const key in item.options) {\r\n        value.push(item.options[key].value);\r\n      }\r\n      const data = [];\r\n      for (const key in item.options) {\r\n        const temp = {};\r\n        temp.name = item.options[key].value;\r\n        temp.value = item.options[key].number;\r\n        data.push(temp);\r\n      }\r\n      if (this.charts[index] === 3) {\r\n        this.$nextTick(() => {\r\n          var myChart = this.$echarts.init(\r\n            this.$refs[\"ring\" + index][0],\r\n            \"macarons\"\r\n          );\r\n          var option = {\r\n            tooltip: {\r\n              trigger: \"item\",\r\n              formatter: \"{b}: {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n              orient: \"vertical\",\r\n              left: 10,\r\n              data: value\r\n            },\r\n            series: [\r\n              {\r\n                type: \"pie\",\r\n                radius: [\"50%\", \"70%\"],\r\n                avoidLabelOverlap: false,\r\n                label: {\r\n                  normal: {\r\n                    show: false,\r\n                    position: \"center\"\r\n                  },\r\n                  emphasis: {\r\n                    show: true,\r\n                    textStyle: {\r\n                      fontSize: \"30\",\r\n                      fontWeight: \"bold\"\r\n                    }\r\n                  }\r\n                },\r\n                labelLine: {\r\n                  normal: {\r\n                    show: false\r\n                  }\r\n                },\r\n                data: data\r\n              }\r\n            ],\r\n            toolbox: {\r\n              feature: {\r\n                saveAsImage: {} // 保存为图片\r\n              }\r\n            }\r\n          };\r\n          // 绘制图表\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * 条形图\r\n     */\r\n    initBarchart(item, index) {\r\n      this.charts[index] != 4\r\n        ? this.$set(this.charts, index, 4)\r\n        : this.$set(this.charts, index, 0);\r\n      if (this.charts[index] === 4) {\r\n        const xdata = [];\r\n        for (const key in item.options) {\r\n          xdata.push(item.options[key].number);\r\n        }\r\n        const ydata = [];\r\n        for (const key in item.options) {\r\n          ydata.push(item.options[key].value);\r\n        }\r\n        this.$nextTick(() => {\r\n          var myChart = this.$echarts.init(\r\n            this.$refs[\"bar\" + index][0],\r\n            \"macarons\"\r\n          );\r\n          let option = {\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              axisPointer: {\r\n                type: \"shadow\"\r\n              }\r\n            },\r\n            grid: {\r\n              left: \"3%\",\r\n              right: \"4%\",\r\n              bottom: \"3%\",\r\n              containLabel: true\r\n            },\r\n            xAxis: {\r\n              type: \"value\",\r\n              boundaryGap: [0, 0.01]\r\n            },\r\n            yAxis: {\r\n              type: \"category\",\r\n              data: ydata\r\n            },\r\n            series: [\r\n              {\r\n                type: \"bar\",\r\n                barWidth: \"50%\",\r\n                data: xdata\r\n              }\r\n            ],\r\n            toolbox: {\r\n              feature: {\r\n                saveAsImage: {} // 保存为图片\r\n              }\r\n            }\r\n          };\r\n          // 绘制图表\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n    },\r\n    dataURLToBlob(dataurl) {\r\n      let arr = dataurl.split(\",\");\r\n      let mime = arr[0].match(/:(.*?);/)[1];\r\n      let bstr = atob(arr[1]);\r\n      let n = bstr.length;\r\n      let u8arr = new Uint8Array(n);\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n      return new Blob([u8arr], { type: mime });\r\n    },\r\n    /**\r\n     * 保存为图片\r\n     */\r\n    saveAsImage(divText, imgText) {\r\n      let canvasID = this.$refs[divText];\r\n      let that = this;\r\n      let a = document.createElement(\"a\");\r\n      html2canvas(canvasID).then(canvas => {\r\n        let dom = document.body.appendChild(canvas);\r\n        dom.style.display = \"none\";\r\n        a.style.display = \"none\";\r\n        document.body.removeChild(dom);\r\n        let blob = that.dataURLToBlob(dom.toDataURL(\"image/jpg\"));\r\n        a.setAttribute(\"href\", URL.createObjectURL(blob));\r\n        //这块是保存图片操作  可以设置保存的图片的信息\r\n        a.setAttribute(\"download\", imgText + \".jpg\");\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        URL.revokeObjectURL(blob);\r\n        document.body.removeChild(a);\r\n      });\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.surveyId = this.$route.query.surveyId;\r\n    this.getQuestions();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.recycle .el-progress__text {\r\n  display: block;\r\n}\r\n.recycle table thead {\r\n  background-color: #f5f7fa;\r\n}\r\n</style>\r\n<style scoped>\r\n.recycle {\r\n  margin: 20px 0;\r\n  width: 861px;\r\n  margin-left: 100px;\r\n}\r\n.must {\r\n  color: #ff6161;\r\n}\r\n.charts {\r\n  height: 280px;\r\n  padding-top: 20px;\r\n  width: 100%;\r\n  border: 1px solid #d6d6d6;\r\n  border-radius: 10px;\r\n  margin-top: 10px;\r\n}\r\nh4 {\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n}\r\n.explain {\r\n  color: #4f4f4f;\r\n  font-size: 14px;\r\n}\r\n</style>"]}]}